from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder
from aiogram.types import ReplyKeyboardMarkup,InlineKeyboardMarkup



def student_main_kb() -> ReplyKeyboardMarkup:
    kb = ReplyKeyboardBuilder()
    # <<< –ù–û–í–û–ï –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ >>>
    kb.button(text="üéì –ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ–±—É—á–µ–Ω–∏—è")
    kb.button(text="üéµ –£—Ä–æ–∫–∏ –ø–æ –∫–æ–¥—É")
    kb.button(text="üìà –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å")
    kb.button(text="üÜò –ü–æ–º–æ—â—å")
    kb.button(text="‚ÑπÔ∏è –û –∫—É—Ä—Å–µ")
    kb.button(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å") # –û—Å—Ç–∞–≤–ª—è–µ–º –¥–ª—è –æ–ø–ª–∞—Ç—ã –∫—É—Ä—Å–æ–≤
    kb.adjust(2, 2, 2) # –ù–æ–≤–∞—è —Ä–∞—Å–∫–ª–∞–¥–∫–∞
    return kb.as_markup(resize_keyboard=True)

# <<< –ò–ó–ú–ï–ù–ï–ù–ò–ï: –î–æ–±–∞–≤–ª—è–µ–º course_code_to_pay >>>
def payment_inline(payment_link: str, course_code_to_pay: str, include_i_paid: bool = True, student_id: int | None = None) -> InlineKeyboardMarkup:
    ib = InlineKeyboardBuilder()
    if payment_link:
        ib.button(text="–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ", url=payment_link)
    if include_i_paid and student_id is not None:
        # <<< –ò–ó–ú–ï–ù–ï–ù–ò–ï: –í—à–∏–≤–∞–µ–º –∫–æ–¥ –∫—É—Ä—Å–∞ –≤ callback_data >>>
        ib.button(text="–Ø –æ–ø–ª–∞—Ç–∏–ª", callback_data=f"paid_ipaid:{course_code_to_pay}:{student_id}")
    ib.adjust(1)
    return ib.as_markup()

def next_t_inline(progress_id: int, has_next: bool):
    kb = InlineKeyboardBuilder()
    if has_next:
        kb.button(text="‚ñ∂Ô∏è –°–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª", callback_data=f"next_t:{progress_id}")
    else:
        kb.button(text="‚úÖ –°–¥–∞—Ç—å —É—Ä–æ–∫", callback_data=f"submit_start:{progress_id}")
    kb.adjust(1)
    return kb.as_markup()


